set nocompatible                " choose no compatibility with legacy vi
set encoding=utf-8
syntax enable
set showcmd                     " display incomplete commands
filetype plugin indent on       " load file type plugins + indentation
set backspace=indent,eol,start  " backspace through everything in insert mode

"" Searching
set hlsearch                    " highlight matches
set incsearch                   " incremental searching
set ignorecase                  " searches are case insensitive...
set smartcase                   " unless they contain at least one capital letter

"" Whitespace
set nowrap                      " don't wrap lines
set tabstop=4                   " a tab is shown as four characters
set shiftwidth=4                " indent by four characters
set expandtab                   " by default use spaces, not tabs

"" List whitespace chars as:
if has("patch-7.4.710")
  set listchars=eol:¬,tab:>·,trail:~,extends:>,precedes:<,space:␣
else
  set listchars=eol:¬,tab:>·,trail:~,extends:>,precedes:<
endif

"" Leader is space
let mapleader = " "
"" Shourtcuts
nnoremap <leader>n :set number! number?<cr>
nnoremap <leader>l :set list! list?<cr>
nnoremap <leader>w :set wrap! wrap?<cr>
nnoremap <leader>s :set spell! spell?<cr>
nnoremap <leader>p :set paste! paste?<cr>
nnoremap <leader>c :set cursorcolumn! cursorline!<CR>
nnoremap <leader>z :ZoomToggle<CR>

"" Look
"Enable true color
if exists('+termguicolors')
  let &t_8f = "\<Esc>[38;2;%lu;%lu;%lum"
  let &t_8b = "\<Esc>[48;2;%lu;%lu;%lum"
  set termguicolors
else
  " Fallback to 256 color pallet
  set t_Co=256
endif

set background=dark                   " tell vim dark backound is used in term

"" Color 81 column
set colorcolumn=81                    " display text width column
hi CursorColumn ctermbg=235
hi ColorColumn ctermbg=235
"" Track cursour if needed
hi clear CursorLine
hi CursorLine ctermbg=235

"" Colorscheme
packadd! gruvbox-material             " fix issue with not loaded functions
let g:gruvbox_material_disable_italic_comment = 1
let g:gruvbox_material_diagnostic_line_highlight = 1
let g:gruvbox_material_better_performance = 1
colorscheme gruvbox-material

"Status line
set laststatus=2                      " always show
set statusline=
set statusline +=\ %n\ %*             " buffer number
set statusline +=\ %<%F%*             " full path
set statusline +=%m%*                 " modified flag
set statusline +=%=%5l%*              " current line
set statusline +=/%L%*                " total lines
set statusline +=%4v\ %*              " virtual column number

"" Show unwanted whitespaces
highlight ExtraWhitespace ctermbg=red
match ExtraWhitespace /\s\+$/
autocmd BufWinEnter * match ExtraWhitespace /\s\+$/
autocmd InsertEnter * match ExtraWhitespace /\s\+\%#\@<!$/
autocmd InsertLeave * match ExtraWhitespace /\s\+$/
autocmd BufWinLeave * call clearmatches()

"" Zoom / Restore window.
function! s:ZoomToggle() abort
  if exists('t:zoomed') && t:zoomed
    execute t:zoom_winrestcmd
    let t:zoomed = 0
  else
    let t:zoom_winrestcmd = winrestcmd()
    resize
    vertical resize
    let t:zoomed = 1
  endif
endfunction
command! ZoomToggle call s:ZoomToggle()
